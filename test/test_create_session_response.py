# coding: utf-8

"""
    OPC UA Web API

    This API provides simple HTTPS based access to an OPC UA server.

    The version of the OpenAPI document: 1.05.4
    Contact: office@opcfoundation.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from opcua_webapi.models.create_session_response import CreateSessionResponse  # noqa: E501

class TestCreateSessionResponse(unittest.TestCase):
    """CreateSessionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateSessionResponse:
        """Test CreateSessionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateSessionResponse`
        """
        model = CreateSessionResponse()  # noqa: E501
        if include_optional:
            return CreateSessionResponse(
                response_header = opcua_webapi.models.response_header.ResponseHeader(
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    request_handle = 0, 
                    service_result = 0, 
                    service_diagnostics = opcua_webapi.models.diagnostic_info.DiagnosticInfo(
                        symbolic_id = 56, 
                        namespace_uri = 56, 
                        locale = 56, 
                        localized_text = 56, 
                        additional_info = '', 
                        inner_status_code = 0, 
                        inner_diagnostic_info = opcua_webapi.models.diagnostic_info.DiagnosticInfo(
                            symbolic_id = 56, 
                            namespace_uri = 56, 
                            locale = 56, 
                            localized_text = 56, 
                            additional_info = '', 
                            inner_status_code = 0, ), ), 
                    string_table = [
                        ''
                        ], 
                    additional_header = opcua_webapi.models.extension_object.ExtensionObject(
                        type_id = '', 
                        encoding = 0, 
                        body = opcua_webapi.models.body.Body(), ), ),
                session_id = '',
                authentication_token = '',
                revised_session_timeout = 1.337,
                server_nonce = 'YQ==',
                server_certificate = 'YQ==',
                server_endpoints = [
                    opcua_webapi.models.endpoint_description.EndpointDescription(
                        endpoint_url = '', 
                        server = opcua_webapi.models.application_description.ApplicationDescription(
                            application_uri = '', 
                            product_uri = '', 
                            application_name = opcua_webapi.models.localized_text.LocalizedText(
                                locale = '', 
                                text = '', ), 
                            application_type = 56, 
                            gateway_server_uri = '', 
                            discovery_profile_uri = '', 
                            discovery_urls = [
                                ''
                                ], ), 
                        server_certificate = 'YQ==', 
                        security_mode = 56, 
                        security_policy_uri = '', 
                        user_identity_tokens = [
                            opcua_webapi.models.user_token_policy.UserTokenPolicy(
                                policy_id = '', 
                                token_type = 56, 
                                issued_token_type = '', 
                                issuer_endpoint_url = '', 
                                security_policy_uri = '', )
                            ], 
                        transport_profile_uri = '', 
                        security_level = 0, )
                    ],
                server_software_certificates = [
                    opcua_webapi.models.signed_software_certificate.SignedSoftwareCertificate(
                        certificate_data = 'YQ==', 
                        signature = 'YQ==', )
                    ],
                server_signature = opcua_webapi.models.signature_data.SignatureData(
                    algorithm = '', 
                    signature = 'YQ==', ),
                max_request_message_size = 0
            )
        else:
            return CreateSessionResponse(
        )
        """

    def testCreateSessionResponse(self):
        """Test CreateSessionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
