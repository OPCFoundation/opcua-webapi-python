# coding: utf-8

"""
    OPC UA Web API

    This API provides simple HTTPS based access to an OPC UA server.

    The version of the OpenAPI document: 1.05.4
    Contact: office@opcfoundation.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from opcua_webapi.models.event_filter_result import EventFilterResult  # noqa: E501

class TestEventFilterResult(unittest.TestCase):
    """EventFilterResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventFilterResult:
        """Test EventFilterResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventFilterResult`
        """
        model = EventFilterResult()  # noqa: E501
        if include_optional:
            return EventFilterResult(
                select_clause_results = [
                    0
                    ],
                select_clause_diagnostic_infos = [
                    opcua_webapi.models.diagnostic_info.DiagnosticInfo(
                        symbolic_id = 56, 
                        namespace_uri = 56, 
                        locale = 56, 
                        localized_text = 56, 
                        additional_info = '', 
                        inner_status_code = 0, 
                        inner_diagnostic_info = opcua_webapi.models.diagnostic_info.DiagnosticInfo(
                            symbolic_id = 56, 
                            namespace_uri = 56, 
                            locale = 56, 
                            localized_text = 56, 
                            additional_info = '', 
                            inner_status_code = 0, ), )
                    ],
                where_clause_result = opcua_webapi.models.content_filter_result.ContentFilterResult(
                    element_results = [
                        opcua_webapi.models.content_filter_element_result.ContentFilterElementResult(
                            status_code = 0, 
                            operand_status_codes = [
                                0
                                ], 
                            operand_diagnostic_infos = [
                                opcua_webapi.models.diagnostic_info.DiagnosticInfo(
                                    symbolic_id = 56, 
                                    namespace_uri = 56, 
                                    locale = 56, 
                                    localized_text = 56, 
                                    additional_info = '', 
                                    inner_status_code = 0, 
                                    inner_diagnostic_info = opcua_webapi.models.diagnostic_info.DiagnosticInfo(
                                        symbolic_id = 56, 
                                        namespace_uri = 56, 
                                        locale = 56, 
                                        localized_text = 56, 
                                        additional_info = '', 
                                        inner_status_code = 0, ), )
                                ], )
                        ], 
                    element_diagnostic_infos = [
                        
                        ], )
            )
        else:
            return EventFilterResult(
        )
        """

    def testEventFilterResult(self):
        """Test EventFilterResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
