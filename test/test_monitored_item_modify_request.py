# coding: utf-8

"""
    OPC UA Web API

    This API provides simple HTTPS based access to an OPC UA server.

    The version of the OpenAPI document: 1.05.4
    Contact: office@opcfoundation.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from opcua_webapi.models.monitored_item_modify_request import MonitoredItemModifyRequest  # noqa: E501

class TestMonitoredItemModifyRequest(unittest.TestCase):
    """MonitoredItemModifyRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonitoredItemModifyRequest:
        """Test MonitoredItemModifyRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonitoredItemModifyRequest`
        """
        model = MonitoredItemModifyRequest()  # noqa: E501
        if include_optional:
            return MonitoredItemModifyRequest(
                monitored_item_id = 0,
                requested_parameters = opcua_webapi.models.monitoring_parameters.MonitoringParameters(
                    client_handle = 0, 
                    sampling_interval = 1.337, 
                    filter = opcua_webapi.models.extension_object.ExtensionObject(
                        type_id = '', 
                        encoding = 0, 
                        body = opcua_webapi.models.body.Body(), ), 
                    queue_size = 0, 
                    discard_oldest = True, )
            )
        else:
            return MonitoredItemModifyRequest(
        )
        """

    def testMonitoredItemModifyRequest(self):
        """Test MonitoredItemModifyRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
